{"version":3,"sources":["pages/test/Test.module.scss","pages/login/Login.module.scss","pages/profile/Profile.module.scss","pages/home/Home.module.scss","pages/registration/Registration.module.scss","common/components/inputText/InputText.module.scss","app/header/Header.module.scss","pages/set-password/ForgotPassword/ForgotPassword.module.scss","pages/password-recovery/PasswordRecovery.module.scss","common/components/checkbox/Checkbox.module.scss","common/components/editableSpan/EditableSpan.module.scss","common/components/select/Select.module.scss","common/components/button/Button.module.scss","common/components/radioButton/Radio.module.scss","pages/404/ErrorPage.module.scss","pages/set-password/ForgotPasswordCheckEmail/ForgotPasswordCheckEmail.module.scss","app/App.module.scss","app/routes/Routes.tsx","reportWebVitals.ts","common/components/button/Button.tsx","common/components/inputText/InputText.tsx","common/components/checkbox/Checkbox.tsx","common/components/editableSpan/EditableSpan.tsx","common/components/select/Select.tsx","common/components/radioButton/Radio.tsx","common/components/range/Range.tsx","pages/test/Test.tsx","pages/404/ErrorPage.tsx","pages/set-password/ForgotPasswordCheckEmail/ForgotPasswordCheckEmail.tsx","dal/setPasswordAPI.ts","bll/reducers/setPasswordReducer.ts","common/assets/images/preloader.gif","common/components/preloader/Preloader.tsx","pages/set-password/ForgotPassword/ForgotPassword.tsx","pages/set-password/setPassword.tsx","dal/registrationAPI.ts","bll/reducers/registrationReducer.ts","pages/registration/Registration.tsx","dal/loginAPI.ts","bll/reducers/profileReducer.ts","bll/reducers/loginReducer.ts","pages/login/Login.tsx","common/assets/images/unknown.png","pages/profile/Profile.tsx","pages/password-recovery/PasswordRecovery.tsx","pages/home/Home.tsx","app/header/Header.tsx","app/App.tsx","bll/store.ts","index.tsx"],"names":["module","exports","ROUTES","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","red","className","value","restProps","finalClassName","s","default","InputText","type","onChange","onChangeText","onKeyPress","onEnter","error","label","labelClassName","errorClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","divInput","e","currentTarget","key","Checkbox","onChangeChecked","children","spanClassName","checkbox","checked","EditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","span","divSpan","Select","options","onChangeOption","mappedOptions","map","option","index","finalClasses","select","Radio","name","onChangeCallback","radio","Range","onChangeRange","finalRangeClassName","range","Test","textSpan","setTextSpan","valueForRadio","setValueForRadio","page","pageTitle","testBox","btn","disabled","style","display","flexDirection","ErrorPage","to","HOME","ForgotPasswordCheckEmail","email","useSelector","state","setPassword","instanceHeroku","axios","create","baseURL","forgotPasswordAPI","data","post","from","message","password","resetPasswordToken","initialSetPasswordState","showModalWindow","status","errorEmail","errorPassword","loading","setLoading","Preloader","alt","width","margin","src","preloader","ForgotPassword","dispatch","useDispatch","emailState","errorEmailState","loadingState","setEmail","mainBlock","height","color","onClick","ghPagesAddress","response","saveEmail","console","log","info","catch","Error","finally","sendInstructionTC","LOGIN","SetPassword","React","memo","axiosInstanceLocal","withCredentials","registrationAPI","initialRegistrationState","isRegistered","isLoading","setIsRegistered","setError","registrationReducer","action","Registration","confirm","setConfirm","registration","res","passwordRegExp","register","instance","authAPI","delete","avatar","put","initialProfileState","setNameAC","setEmailAC","setAvatarAC","setLoadingAC","updateMe","updatedUser","profileReducer","initialLoginState","isLoggedIn","loginError","logoutStatus","setIsLoggedInAC","loginReducer","Login","rememberMe","setRememberMe","login","PROFILE","err","setErrorAC","link","SET_PASSWORD","REGISTRATION","Profile","nameFromProp","profile","setName","logout","imgBox","img","unknown","changeBtn","newAvatar","prompt","description","PasswordRecovery","errorPasswordState","token","useParams","newPassword","createPasswordTC","Home","PASSWORD_RECOVERY","ERROR_PAGE","Routes","exact","path","render","TEST","Header","header","opacity","App","useEffect","app","reducers","combineReducers","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73004d77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Test_page__V_il9\",\"pageTitle\":\"Test_pageTitle__2ORty\",\"testBox\":\"Test_testBox__3GUe9\",\"input\":\"Test_input__3Xbe7\",\"btn\":\"Test_btn__1EFHH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Login_page__3CELM\",\"pageTitle\":\"Login_pageTitle__3b_eK\",\"link\":\"Login_link__26AzG\",\"error\":\"Login_error__1Yvx8\",\"input\":\"Login_input__1-9m3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Profile_page__3rzc5\",\"pageTitle\":\"Profile_pageTitle__3DgZP\",\"error\":\"Profile_error__slIqk\",\"logout\":\"Profile_logout__28fb3\",\"profile\":\"Profile_profile__QEf76\",\"imgBox\":\"Profile_imgBox__1F6HP\",\"img\":\"Profile_img__196rf\",\"changeBtn\":\"Profile_changeBtn__1reoX\",\"description\":\"Profile_description__iFDK7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Home_page__1vYEV\",\"pageTitle\":\"Home_pageTitle__1gGqT\",\"btn\":\"Home_btn__2qxZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Registration_page__3HScb\",\"pageTitle\":\"Registration_pageTitle__1_QLq\",\"error\":\"Registration_error__2i9oP\",\"input\":\"Registration_input__2zjy0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divInput\":\"InputText_divInput__3POek\",\"label\":\"InputText_label__1Boae\",\"input\":\"InputText_input__23tlm\",\"errorInput\":\"InputText_errorInput__FP8YK\",\"error\":\"InputText_error__3Z2Hd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1kine\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"ForgotPassword_page__19hd1\",\"pageTitle\":\"ForgotPassword_pageTitle__3sreY\",\"mainBlock\":\"ForgotPassword_mainBlock__NJWzP\",\"input\":\"ForgotPassword_input__EV5Y-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"PasswordRecovery_page__1YXqI\",\"pageTitle\":\"PasswordRecovery_pageTitle__p3TqD\",\"mainBlock\":\"PasswordRecovery_mainBlock__2870M\",\"input\":\"PasswordRecovery_input__1qmCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Checkbox_label__1stQw\",\"checkbox\":\"Checkbox_checkbox__17RkY\",\"spanClassName\":\"Checkbox_spanClassName__2k83p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divSpan\":\"EditableSpan_divSpan__2LJxX\",\"input\":\"EditableSpan_input__3QJR6\",\"span\":\"EditableSpan_span__31Ul5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__2pVdu\",\"option\":\"Select_option__2DbwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__17E92\",\"red\":\"Button_red__20_R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Radio_label__-oTiN\",\"radio\":\"Radio_radio__3oPYT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"ErrorPage_page__315dc\",\"pageTitle\":\"ErrorPage_pageTitle__2wKU4\",\"btn\":\"ErrorPage_btn__EEi-i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"ForgotPasswordCheckEmail_page__1cOnc\",\"pageTitle\":\"ForgotPasswordCheckEmail_pageTitle___Xjhz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__10dw9\"};","import React from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport {Test} from '../../pages/test/Test';\nimport {ErrorPage} from \"../../pages/404/ErrorPage\";\nimport {SetPassword} from \"../../pages/set-password/setPassword\";\nimport {Registration} from \"../../pages/registration/Registration\";\nimport {Login} from \"../../pages/login/Login\";\nimport {Profile} from \"../../pages/profile/Profile\";\nimport {PasswordRecovery} from \"../../pages/password-recovery/PasswordRecovery\";\nimport {Home} from \"../../pages/home/Home\";\n\nexport enum ROUTES {\n    HOME = '/',\n    TEST = '/test',\n    LOGIN = '/login',\n    PROFILE = '/profile',\n    REGISTRATION = '/registration',\n    PASSWORD_RECOVERY = '/password-recovery/:token?',\n    SET_PASSWORD = '/set-password',\n    ERROR_PAGE = '/404',\n}\n\nexport const Routes = () => {\n    return (\n        <Switch>\n            <Route exact path={ROUTES.HOME} render={() => <Home/>}/>\n            <Route path={ROUTES.TEST} render={() => <Test/>}/>\n            <Route path={ROUTES.LOGIN} render={() => <Login/>}/>\n            <Route path={ROUTES.PROFILE} render={() => <Profile/>}/>\n            <Route path={ROUTES.REGISTRATION} render={() => <Registration/>}/>\n            <Route path={ROUTES.PASSWORD_RECOVERY} render={() => <PasswordRecovery/>}/>\n            <Route path={ROUTES.SET_PASSWORD} render={() => <SetPassword/>}/>\n            <Route path={ROUTES.ERROR_PAGE} render={() => <ErrorPage/>}/>\n            <Redirect from={'*'} to={ROUTES.ERROR_PAGE}/>\n        </Switch>\n    )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport s from './Button.module.scss'\n\ntype DefaultButtonPropsType = React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype ButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n    value?: string\n}\n\nexport const Button: React.FC<ButtonPropsType> = (\n    {\n        red, className, value,\n        ...restProps\n    }\n) => {\n    const finalClassName = `${red && s.red} ${s.default} ${className}`\n\n    return (\n        <button className={finalClassName}{...restProps}>\n            {value}\n        </button>\n    )\n}\n","import React from \"react\";\nimport s from './InputText.module.scss'\n\ntype DefaultInputPropsType = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype InputTextPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    errorClassName?: string\n    label?: string\n    labelClassName?: string\n}\n\nexport const InputText: React.FC<InputTextPropsType> = (\n    {   type,\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error, label,\n        labelClassName,\n        className, errorClassName,\n\n        ...restProps\n    } ) => {\n    const onChangeCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n        (onEnter && e.key === 'Enter') && onEnter()\n    }\n\n    const finalSpanClassName = `${s.error} ${errorClassName || ''}`\n    const finalInputClassName = `${s.input} ${error && s.errorInput} ${s.superInput} ${className || ''}`\n\n    return (\n        <div className={s.divInput}>\n            <span className={`${s.label} ${labelClassName || ''}`}>{label}</span>\n            <input\n                type={type || 'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps}\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </div>\n    )\n}","import React from 'react'\nimport s from './Checkbox.module.scss'\n\ntype DefaultInputPropsType = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype CheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nexport const Checkbox: React.FC<CheckboxPropsType> = (\n    {\n        type,\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children,\n\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange(e)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className || ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps}\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n    )\n}\n","import React, {useState} from 'react'\nimport s from './EditableSpan.module.scss'\nimport {InputText} from '../inputText/InputText';\n\ntype DefaultInputPropsType = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype DefaultSpanPropsType = React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\ntype EditableSpanType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType\n}\n\nexport const EditableSpan: React.FC<EditableSpanType> = (\n    {\n        autoFocus,\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false)\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.span} ${className}`\n\n    return (\n        <div className={s.divSpan}>\n            {editMode\n                ? (\n                    <InputText\n                        autoFocus\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n                        className={s.input}\n\n                        {...restProps}\n                    />\n                ) : (\n                    <span onDoubleClick={onDoubleClickCallBack} className={spanClassName} {...restSpanProps}>\n                        ✎ {children || restProps.value}\n                    </span>\n                )\n            }\n        </div>\n    )\n}","import React from 'react'\nimport s from './Select.module.scss'\n\ntype DefaultSelectPropsType = React.DetailedHTMLProps<React.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\ntype SelectPropsType = DefaultSelectPropsType & {\n    options: Array<string>\n    onChangeOption?: (option: string) => void\n}\n\nexport const Select: React.FC<SelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        className,\n        ...restProps\n    }\n) => {\n    const mappedOptions: JSX.Element[] = options ? options.map((option, index) =>\n        <option className={s.option} key={option + '-' + index}>{option}</option>) : []\n\n    const onChangeCallback = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n        finalClasses = finalClasses + s.onBlur\n    }\n\n    let finalClasses = s.select + ' ' + (className || '')\n\n    return (\n        <select className={finalClasses} onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n","import React from 'react'\nimport s from './Radio.module.scss'\n\ntype DefaultRadioPropsType = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype RadioPropsType = DefaultRadioPropsType & {\n    options: Array<string>\n    onChangeOption?: (option: string) => void\n    labelClassName?: string\n}\n\nexport const Radio: React.FC<RadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        className, labelClassName,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    const mappedOptions: JSX.Element[] = options ?\n        options.map((option, index) => (\n            <label key={name + '-' + index} className={s.label + ' ' + (labelClassName || '')}>\n                <input\n                    type={'radio'}\n                    name={name}\n                    value={option}\n                    checked={option === value}\n                    onChange={onChangeCallback}\n                    className={s.radio + ' ' + (className || '')}\n                    {...restProps}\n                />\n                {option}\n            </label>\n        )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n","import React from 'react'\nimport s from './Range.module.scss'\n\ntype DefaultInputPropsType = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype RangePropsType = DefaultInputPropsType & {\n    onChangeRange?: (value: number) => void\n};\n\nexport const Range: React.FC<RangePropsType> = (\n    {\n        type,\n        onChange, onChangeRange,\n        className,\n\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeRange && onChangeRange(+e.currentTarget.value)\n    }\n\n    const finalRangeClassName = `${s.range} ${className || ''}`\n\n    return (\n            <input\n                type={'range'}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n                value={restProps.value}\n\n                {...restProps}\n            />\n    )\n}\n","import React, {useState} from \"react\";\nimport s from './Test.module.scss'\nimport {Button} from \"../../common/components/button/Button\";\nimport {InputText} from \"../../common/components/inputText/InputText\";\nimport {Checkbox} from \"../../common/components/checkbox/Checkbox\";\nimport {EditableSpan} from \"../../common/components/editableSpan/EditableSpan\";\nimport {Select} from \"../../common/components/select/Select\";\nimport {Radio} from \"../../common/components/radioButton/Radio\";\nimport {Range} from \"../../common/components/range/Range\";\n\nexport const Test: React.FC = () => {\n    const [textSpan, setTextSpan] = useState<string>('Double click to edit')\n    const [valueForRadio, setValueForRadio] = useState<string>('')\n\n    return (\n        <div className={s.page}>\n            <div className={s.pageTitle}>Test page</div>\n\n            <div className={s.testBox}>\n                <div>\n                    <InputText label={'Default input:'} className={s.input}/>\n                    <InputText label={'Error input:'} error={'Some test error'} className={s.input}/>\n                </div>\n\n                <Button value={'Default button'} className={s.btn}/>\n                <Button value={'Red button'} red className={s.btn}/>\n                <Button value={'Disabled button'} disabled className={s.btn}/>\n\n                <div style={{display: 'flex', flexDirection: 'column'}}>\n                    <Checkbox>Default checkbox</Checkbox>\n                    <Checkbox checked>Checked checkbox</Checkbox>\n                    <Checkbox disabled>Disabled checkbox</Checkbox>\n                </div>\n\n                <EditableSpan value={textSpan} onChangeText={setTextSpan}/>\n\n                <Select className={s.select} options={['Option 1', 'Option 2', 'Option 3']}/>\n\n                <Radio\n                    options={['Option 1', 'Option 2', 'Option 3']}\n                    value={valueForRadio}\n                    onChange={e => setValueForRadio(e.currentTarget.value)}/>\n\n                <Range />\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport s from './ErrorPage.module.scss'\nimport {Button} from \"../../common/components/button/Button\";\nimport { NavLink } from \"react-router-dom\";\nimport {ROUTES} from \"../../app/routes/Routes\";\n\nexport const ErrorPage: React.FC = () => {\n    return (\n        <div className={s.page}>\n            <NavLink to={ROUTES.HOME}><Button value={'GO BACK HOME'} className={s.btn}/></NavLink>\n        </div>\n    )\n}\n","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../../bll/store\";\nimport s from './ForgotPasswordCheckEmail.module.scss';\n\nexport const ForgotPasswordCheckEmail: React.FC = () => {\n\n    const email = useSelector<AppStateType, string>(state => state.setPassword.email);\n\n\n    return (\n        <div className={s.page}>\n            <div className={s.pageTitle}>Check Email</div>\n            <div>\n                {`We have sent an Email with instructions to ${email}`}\n            </div>\n        </div>\n    )\n}\n\n\n","import axios from \"axios\";\n\nconst instanceHeroku = axios.create({\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\n})\n// const instanceLocal = axios.create({\n//     baseURL: \"http://localhost:7542/2.0/\",\n// })\nexport const forgotPasswordAPI = {\n    forgot(data: ForgotPasswordType) {\n        return instanceHeroku.post<ForgotPasswordType, ForgotPasswordResponseType>('auth/forgot', {\n            email: data.email,\n            from: \"test-front-admin <ai73a@yandex.by>\",\n            message: `<div style=\"background-color: lime; padding: 15px\">password recovery link:<a href='${data.message}/$token$'>Follow the link</a></div>`,\n        })\n    },\n\n    setNewPassword(data: NewPasswordRequestType) {\n        return instanceHeroku.post<NewPasswordRequestType, NewPasswordResponseType>('auth/set-new-password', {\n            password: data.password,\n            resetPasswordToken: data.resetPasswordToken,\n        })\n    }\n}\n\n//forgot(passwordModel:ForgotPasswordType)\n//тип отправляемый на сервер\n\nexport type ForgotPasswordType = {\n    email: string,\n    // from: string,\"test-front-admin <ai73a@yandex.by>\",  можно указать разработчика фронта)\n    message: string,\n    //`<div style=\"background-color: lime; padding: 15px\">password recovery link:<a href='http://localhost:3000/#/set-new-password/$token$'>link</a></div>`\n    // хтмп-письмо, вместо $token$ бэк вставит токен\n}\n\n//тип приходящий с сервера\nexport type ForgotPasswordResponseType = {\n    data:\n        {\n            info: string,\n        },\n    Error: {\n        response: {\n            data: {\n                error: string\n            }\n        }\n    }\n}\n\n//setNewPassword\n//тип отправляемый на сервер\nexport type NewPasswordRequestType = {\n    password: string,\n    resetPasswordToken: string,\n}\n//тип приходящий с сервера\nexport type NewPasswordResponseType = {\n    data: {\n        info: string,\n        //уточнить приходит ли там error, при положиетльном ответе\n        error: string,\n    },\n    status: number,\n    Error: {\n        response: {\n            data: {\n                error: string\n            }\n        }\n    }\n}\n\n","import {Dispatch} from \"redux\";\nimport {forgotPasswordAPI} from \"../../dal/setPasswordAPI\";\n\n\n//1 типизация\ntype setPasswordStateType = {\n    email: string,\n    password: string,\n    showModalWindow: boolean,\n    status: number,\n    errorEmail: string,\n    errorPassword: string,\n    loading: boolean,\n}\n//2 объект\nlet initialSetPasswordState: setPasswordStateType = {\n    email: \"\",\n    password: \"\",\n    showModalWindow: false,\n    status: 0,\n    errorEmail: \"\",\n    errorPassword: \"\",\n    loading: false,\n}\n//3 actions\nexport const saveEmail = (email: string) => ({type: \"SET-PASSWORD/SAVE_EMAIL\", email} as const);\nexport const savePassword = (password: string) => ({type: \"SET-PASSWORD/SAVE_PASSWORD\", password} as const);\nexport const savePasswordStatusCode = (status: number) => ({type: \"SET-PASSWORD/SAVE_PASSWORD_STATUS_CODE\", status} as const);\n\nexport const showModalWindow = (showModalWindow: boolean) => ({type: \"SET-PASSWORD/SHOW_MODAL_WINDOW\", showModalWindow} as const);\nexport const showErrorEmail = (errorEmail: string) => ({type: \"SET-PASSWORD/SHOW_ERROR_EMAIL\", errorEmail} as const);\nexport const showErrorPassword = (errorPassword: string) => ({type: \"SET-PASSWORD/SHOW_ERROR_PASSWORD\", errorPassword} as const);\n\nexport const setLoading = (loading: boolean) => ({type: \"SET-PASSWORD/SET_LOADING\", loading} as const);\n\n//4 reducer\nexport const setPasswordReducer = (state = initialSetPasswordState, action: ActionSetPasswordReducerType): setPasswordStateType => {\n    switch (action.type) {\n        case \"SET-PASSWORD/SAVE_EMAIL\": {\n            return {...state, email: action.email}\n        }\n        case \"SET-PASSWORD/SAVE_PASSWORD\": {\n            return {...state, password: action.password}\n        }\n        case \"SET-PASSWORD/SHOW_MODAL_WINDOW\": {\n            return {...state, showModalWindow: action.showModalWindow}\n        }\n        case \"SET-PASSWORD/SHOW_ERROR_EMAIL\": {\n            return {...state, errorEmail: action.errorEmail}\n        }\n        case \"SET-PASSWORD/SHOW_ERROR_PASSWORD\": {\n            return {...state, errorPassword: action.errorPassword}\n        }\n        case \"SET-PASSWORD/SAVE_PASSWORD_STATUS_CODE\": {\n            return {...state, status: action.status}\n        }\n        case \"SET-PASSWORD/SET_LOADING\": {\n            return {...state, loading: action.loading}\n        }\n        default:\n            return state;\n    }\n}\n\n//5 actionTypes\nexport type ActionSetPasswordReducerType =\n    | ReturnType<typeof saveEmail>\n    | ReturnType<typeof showModalWindow>\n    | ReturnType<typeof savePasswordStatusCode>\n    | ReturnType<typeof savePassword>\n    | ReturnType<typeof showErrorEmail>\n    | ReturnType<typeof showErrorPassword>\n    | ReturnType<typeof setLoading>;\n\n\n//6 саночки\n\nexport const sendInstructionTC = (email: string, ghPagesAddress: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setLoading(true));\n        forgotPasswordAPI.forgot({email, message: ghPagesAddress})\n            .then((response) => {\n                debugger;\n                dispatch(showModalWindow(true));\n                dispatch(saveEmail(email));\n                console.log(response.data.info);\n\n            })\n            .catch(({...Error}) => {\n                debugger;\n                console.log(Error.response.data.error)\n                dispatch(showErrorEmail(Error.response.data.error))\n            })\n            .finally(() => {\n                dispatch(setLoading(false))\n            })\n    }\n}\n\nexport const createPasswordTC = (newPassword: string, token: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setLoading(true));\n\n        forgotPasswordAPI.setNewPassword({password: newPassword, resetPasswordToken: token})\n            .then((response) => {\n                debugger\n                dispatch(savePasswordStatusCode(response.status));\n                dispatch(showModalWindow(false));\n                dispatch(savePassword(newPassword));\n            })\n            .catch(({...Error}) => {\n                debugger;\n                console.log(Error.response.data.error);\n                dispatch(showErrorPassword(Error.response.data.error));\n            })\n            .finally(() => {\n                dispatch(setLoading(false))\n            })\n    }\n}\n\n","export default __webpack_public_path__ + \"static/media/preloader.dc94d85e.gif\";","import preloader from \"../../assets/images/preloader.gif\";\nimport React from \"react\";\n\nexport const Preloader: React.FC = () => {\n    return <img alt={'loading...'} style={{width: '100px', margin: '10px'}} src={preloader}/>\n}","import React, {ChangeEvent, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {sendInstructionTC} from \"../../../bll/reducers/setPasswordReducer\";\nimport s from \"./ForgotPassword.module.scss\";\nimport {AppStateType} from \"../../../bll/store\";\nimport {InputText} from \"../../../common/components/inputText/InputText\";\nimport {Button} from \"../../../common/components/button/Button\";\nimport {Preloader} from \"../../../common/components/preloader/Preloader\";\nimport {NavLink} from \"react-router-dom\";\nimport {ROUTES} from \"../../../app/routes/Routes\";\n\nexport const ForgotPassword: React.FC = () => {\n\n    const dispatch = useDispatch();\n\n    const emailState = useSelector<AppStateType, string>(state => state.setPassword.email);\n    const errorEmailState = useSelector<AppStateType, string>(state => state.setPassword.errorEmail);\n    const loadingState = useSelector<AppStateType, boolean>(state => state.setPassword.loading);\n\n    const [email, setEmail] = useState<string>(emailState);\n\n\n    const emailHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value);\n    }\n\n    const sendInstruction = () => {\n        //тут можно сделать красивей\n        dispatch(sendInstructionTC(email, 'https://olgamarhulevich.github.io/project-front-end/#/password-recovery'));\n    }\n\n    return (\n        <div className={s.page}>\n            <div className={s.pageTitle}>Forgot your password?</div>\n            <div className={s.mainBlock}>\n                <p>Enter your email address and we will send you further instructions</p>\n                <div className={s.input}>\n                    <InputText label={\"Email\"}\n                               value={email}\n                               onChange={emailHandler}\n                               type={\"text\"}\n                               name={\"email\"}/>\n                </div>\n                <p style={{height: '1em', color: '#de2e2e'}}>{errorEmailState}</p>\n                <div>\n                    <Button disabled={loadingState} value={\"Send instructions\"} onClick={sendInstruction}/>\n                </div>\n                <p>Did you remember your password?</p>\n                <NavLink to={ROUTES.LOGIN}>Try to log in</NavLink>\n                {loadingState && <Preloader/>}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../bll/store\";\nimport {ForgotPasswordCheckEmail} from \"./ForgotPasswordCheckEmail/ForgotPasswordCheckEmail\";\nimport {ForgotPassword} from \"./ForgotPassword/ForgotPassword\";\n\nexport const SetPassword: React.FC = React.memo(() => {\n\n    const showModal = useSelector<AppStateType, boolean>(state => state.setPassword.showModalWindow);\n\n    return (!showModal ? <ForgotPassword/> : <ForgotPasswordCheckEmail/>)\n})\n\n\n\n\n","import axios from \"axios\";\n\nexport const axiosInstanceLocal = axios.create({\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\n    //baseURL: 'http://localhost:7542/2.0/',\n    withCredentials: true\n})\n\ntype RegisterResponseType = {\n    addedUser: Object\n    error?: string\n}\ntype RegisterPayloadType = {\n    email: string\n    password: string\n}\n\nexport const registrationAPI = {\n    register: (email: string, password: string) => {\n        return axiosInstanceLocal.post<RegisterPayloadType, {data: RegisterResponseType}>('auth/register', {email, password})\n    },\n}","import {Dispatch} from \"redux\";\nimport {registrationAPI} from \"../../dal/registrationAPI\";\n\ntype initialRegistrationStateType = typeof initialRegistrationState\nlet initialRegistrationState = {\n    isRegistered: false,\n    error: '',\n    isLoading: false\n}\n\nconst registrationReducer = (state: initialRegistrationStateType = initialRegistrationState, action: ActionRegistrationReducerType) => {\n    switch (action.type) {\n        case \"REGISTER/SET-SUCCESS\":\n            return {...state, isRegistered: action.value}\n        case \"REGISTER/SET-ERROR\":\n            return {...state, error: action.error}\n        case \"REGISTER/SET-LOADING\":\n            return {...state, isLoading: action.value}\n        default:\n            return state;\n    }\n}\n\nexport const setIsRegistered = (value: boolean) => ({type: 'REGISTER/SET-SUCCESS', value} as const)\nexport const setError = (error: string) => ({type: 'REGISTER/SET-ERROR', error} as const)\nexport const setLoading = (value: boolean) => ({type: 'REGISTER/SET-LOADING', value} as const)\n\n//thunk\nexport const register = (email: string, password: string) => (dispatch: Dispatch) => {\n    dispatch(setLoading(true))\n    return registrationAPI.register(email, password)\n        .then(res => {\n            if (!res.data.error) {\n                dispatch(setIsRegistered(true))\n                dispatch(setError(''))\n            } else {\n                dispatch(setIsRegistered(false))\n                dispatch(setError(res.data.error))\n            }\n        })\n        .catch((error) => {\n            dispatch(setIsRegistered(false))\n            dispatch(setError(error.response.data.error + ' ' + (error.response.data.passwordRegExp || '')))\n        })\n        .finally(() => dispatch(setLoading(false)))\n}\n\nexport type ActionRegistrationReducerType =\n    ReturnType<typeof setIsRegistered>\n    | ReturnType<typeof setError>\n    | ReturnType<typeof setLoading>\n\nexport default registrationReducer;","import React, {useState} from \"react\";\nimport s from './Registration.module.scss'\nimport {InputText} from \"../../common/components/inputText/InputText\";\nimport {Button} from \"../../common/components/button/Button\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {register, setError} from \"../../bll/reducers/registrationReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../bll/store\";\nimport {ROUTES} from \"../../app/routes/Routes\";\nimport {Preloader} from \"../../common/components/preloader/Preloader\";\n\nexport const Registration: React.FC = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirm, setConfirm] = useState('')\n\n    const dispatch = useDispatch()\n\n    const isRegistered = useSelector((state: AppStateType) => state.registration.isRegistered)\n    const error = useSelector((state: AppStateType) => state.registration.error)\n    const isLoading = useSelector((state: AppStateType) => state.registration.isLoading)\n\n    const submit = () => {\n        if (password === confirm) {\n            dispatch(register(email, password))\n        } else {\n            dispatch(setError('Password\" and \"Confirm password\" should be equal.'))\n        }\n    }\n\n    if (isRegistered) {\n        return <Redirect to={ROUTES.LOGIN}/>\n    }\n\n    return (<>\n            <div className={s.page}>\n                <div className={s.pageTitle}>Sign up</div>\n\n                <div className={s.error}>{error}</div>\n\n                <InputText\n                    onChange={(e) => setEmail(e.currentTarget.value)}\n                    label={'Email'} error={''}\n                    className={s.input}/>\n\n                <InputText\n                    onChange={(e) => setPassword(e.currentTarget.value)}\n                    label={'Password'}\n                    type={\"password\"} error={''}\n                    className={s.input}/>\n\n                <InputText\n                    onChange={(e) => setConfirm(e.currentTarget.value)}\n                    label={'Confirm password'} type={\"password\"}\n                    error={''}\n                    className={s.input}/>\n\n                <div>\n                    <NavLink to={ROUTES.HOME}><Button disabled={isLoading} red value={'Cancel'} className={s.btn}/></NavLink>\n                    <Button onClick={submit} value={'Register'} disabled={isLoading}/>\n                </div>\n\n                {isLoading && <Preloader/>}\n            </div>\n        </>\n\n    )\n}\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\n    //baseURL: 'http://localhost:7542/2.0/',\n    withCredentials: true\n})\n\n// api\nexport const authAPI = {\n    login(data: LoginParamsType) {\n        return instance.post<LoginParamsType, { data: ProfileType }>('auth/login', data);\n    },\n    logout() {\n        return instance.delete<{info: string, error?: string}>('auth/me');\n    },\n    authMe() {\n        return instance.post<{}, {data: ProfileType}>('auth/me', {})\n    },\n    updateMe(name: string, avatar: string) {\n        return instance.put<{name: string, avatar: string}, {data: {updatedUser: ProfileType, error?: string}}>('auth/me', {name, avatar})\n    },\n}\n\n// types\nexport type ProfileType = {\n    _id: string\n    email: string\n    name: string\n    avatar?: string\n    publicCardPacksCount: number\n    created: Date\n    updated: Date\n    isAdmin: boolean;\n    verified: boolean;\n    rememberMe: boolean;\n    error?: string;\n}\n\nexport type LoginParamsType = {\n    email: string\n    password: string\n    rememberMe?: boolean\n}\n\n\n","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../../dal/loginAPI\";\nimport {setIsLoggedInAC} from \"./loginReducer\";\nimport {setIsRegistered} from \"./registrationReducer\";\n\ntype initialProfileStateType = typeof initialProfileState\nconst initialProfileState = {\n    email: '',\n    name: '',\n    avatar: '',\n    isLoading: false,\n    error: ''\n}\n\nconst profileReducer = (state: initialProfileStateType = initialProfileState, action: ActionProfileReducerType) => {\n    switch (action.type) {\n        case \"PROFILE/SET-NAME\":\n            return {...state, name: action.value}\n        case \"PROFILE/SET-EMAIL\":\n            return {...state, email: action.value}\n        case \"PROFILE/SET-AVATAR\":\n            return {...state, avatar: action.value}\n        case \"PROFILE/SET-LOADING\":\n            return {...state, isLoading: action.value}\n        case \"PROFILE/SET-ERROR\":\n            return {...state, error: action.error}\n        default:\n            return state;\n    }\n}\n\nexport const setNameAC = (value: string) => ({type: \"PROFILE/SET-NAME\", value} as const)\nexport const setEmailAC = (value: string) => ({type: \"PROFILE/SET-EMAIL\", value} as const)\nexport const setAvatarAC = (value: string) => ({type: \"PROFILE/SET-AVATAR\", value} as const)\nexport const setLoadingAC = (value: boolean) => ({type: 'PROFILE/SET-LOADING', value} as const)\nexport const setError = (error: string) => ({type: 'PROFILE/SET-ERROR', error} as const)\n\n//thunk\nexport const authMe = () => (dispatch: Dispatch) => {\n    dispatch(setLoadingAC(true))\n\n    authAPI.authMe()\n        .then(res => {\n            if (!res.data.error) {\n                dispatch(setNameAC(res.data.name))\n                dispatch(setAvatarAC(res.data.avatar || ''))\n                dispatch(setEmailAC(res.data.email))\n                dispatch(setIsLoggedInAC(true))\n            } else {\n                //dispatch(setError(res.data.error))\n            }\n        })\n        .catch((error) => {\n            //dispatch(setError(error.response.data.error + ' ' + (error.response.data.passwordRegExp || '')))\n        })\n        .finally(() => {\n            dispatch(setLoadingAC(false))\n        })\n}\n\nexport const updateMe = (name: string, avatar: string) => (dispatch: Dispatch) => {\n    dispatch(setLoadingAC(true))\n\n    authAPI.updateMe(name, avatar)\n        .then(res => {\n            if (!res.data.error) {\n                dispatch(setAvatarAC(res.data.updatedUser.avatar || ''))\n            } else {\n                dispatch(setError(res.data.error))\n            }\n        })\n        .catch((error) => {\n            dispatch(setError(error.response.data.error + ' ' + (error.response.data.passwordRegExp || '')))\n        })\n        .finally(() => {\n            dispatch(setLoadingAC(false))\n        })\n}\n\nexport const logoutTC = () => (dispatch: Dispatch) => {\n    dispatch(setLoadingAC(true))\n\n    authAPI.logout()\n        .then((res) => {\n            if (!res.data.error) {\n                dispatch(setIsLoggedInAC(false))\n                dispatch(setIsRegistered(false))\n            }\n        })\n        .catch((error) => {\n            dispatch(setError(error.response.data.error + ' ' + (error.response.data.passwordRegExp || '')))\n        })\n        .finally(() => {\n            dispatch(setLoadingAC(false))\n        })\n}\n\nexport type ActionProfileReducerType =\n    ReturnType<typeof setNameAC>\n    | ReturnType<typeof setEmailAC>\n    | ReturnType<typeof setAvatarAC>\n    | ReturnType<typeof setLoadingAC>\n    | ReturnType<typeof setIsLoggedInAC>\n    | ReturnType<typeof setIsRegistered>\n    | ReturnType<typeof setError>\n\nexport default profileReducer;","import {authAPI, LoginParamsType} from \"../../dal/loginAPI\";\nimport {Dispatch} from \"redux\";\nimport {setAvatarAC, setEmailAC, setNameAC} from \"./profileReducer\";\n\ntype initialLoginStateType = typeof initialLoginState\nconst initialLoginState = {\n    isLoggedIn: false,\n    loginError: '',\n    logoutStatus: 'idle',\n    isLoading: false\n}\n\nconst loginReducer = (state: initialLoginStateType = initialLoginState, action: ActionLoginReducerType): initialLoginStateType => {\n    switch (action.type) {\n        case \"LOGIN/SET-IS-LOGGED-IN\":\n            return {\n                ...state,\n                isLoggedIn: action.value\n            }\n        case \"LOGIN/SET-IN-ERROR\":\n            return {\n                ...state,\n                loginError: action.error\n            }\n        case \"LOGIN/SET-LOADING\":\n            return {\n                ...state,\n                isLoading: action.value\n            }\n        default:\n            return state;\n    }\n}\n\n// actions\nexport const setIsLoggedInAC = (value: boolean) => ({type: \"LOGIN/SET-IS-LOGGED-IN\", value} as const)\nexport const setErrorAC = (error: string) => ({type: \"LOGIN/SET-IN-ERROR\", error} as const)\nexport const setLoadingAC = (value: boolean) => ({type: \"LOGIN/SET-LOADING\", value} as const)\n\n\n//thunk\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionLoginReducerType>) => {\n    dispatch(setLoadingAC(true))\n\n    authAPI.login(data)\n        .then(res => {\n            dispatch(setIsLoggedInAC(true))\n            dispatch(setEmailAC(res.data.email))\n            dispatch(setAvatarAC(res.data.avatar || ''))\n            dispatch(setNameAC(res.data.name))\n        })\n        .catch((err) => {\n            const error = err.response\n                ? err.response.data.error\n                : (err.message + `, more details in the console`);\n            dispatch(setErrorAC(error))\n        })\n    .finally(() => {\n        dispatch(setLoadingAC(false))\n    })\n}\n\n//types\nexport type ActionLoginReducerType =\n    ReturnType<typeof setIsLoggedInAC>\n    | ReturnType<typeof setErrorAC>\n    | ReturnType<typeof setAvatarAC>\n    | ReturnType<typeof setEmailAC>\n    | ReturnType<typeof setNameAC>\n    | ReturnType<typeof setLoadingAC>\n\nexport default loginReducer;","import React, {useState} from \"react\";\nimport s from './Login.module.scss'\nimport {InputText} from \"../../common/components/inputText/InputText\";\nimport {Checkbox} from \"../../common/components/checkbox/Checkbox\";\nimport {Button} from \"../../common/components/button/Button\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginTC} from \"../../bll/reducers/loginReducer\";\nimport {AppStateType} from \"../../bll/store\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {ROUTES} from \"../../app/routes/Routes\";\nimport {Preloader} from \"../../common/components/preloader/Preloader\";\n\n\nexport const Login: React.FC = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [rememberMe, setRememberMe] = useState(false)\n\n    const isLoggedIn = useSelector<AppStateType>(state => state.login.isLoggedIn)\n    const error = useSelector((state:AppStateType) => state.login.loginError)\n    const isLoading = useSelector((state:AppStateType) => state.login.isLoading)\n\n    const dispatch = useDispatch()\n    const loginHandler = () => {\n        dispatch(loginTC({email, password, rememberMe}))\n    }\n\n    if (isLoggedIn) {\n        return <Redirect to={ROUTES.PROFILE}/>\n    }\n\n    return (\n        <div className={s.page}>\n            <div className={s.pageTitle}>Log In</div>\n\n            <div style={{height: '1em'}} className={s.error}>{error}</div>\n\n            <InputText label={'Email'} error={''} className={s.input} value={email}\n                       onChange={(e) => setEmail(e.currentTarget.value)}/>\n            <InputText label={'Password'} type={'password'} error={''} value={password} className={s.input}\n                       onChange={(e) => setPassword(e.currentTarget.value)}/>\n\n            <Checkbox checked={rememberMe} onChange={(e) => setRememberMe(e.currentTarget.checked)}>Remember me</Checkbox>\n\n            <div>\n                <NavLink to={ROUTES.HOME}><Button disabled={isLoading} red value={'Cancel'} className={s.btn}/></NavLink>\n                <Button disabled={isLoading} value={'Log in'} onClick={loginHandler} className={s.btn}/>\n            </div>\n\n            <div>\n                <NavLink className={s.link} to={ROUTES.SET_PASSWORD}>Forgot your password?</NavLink>\n                <NavLink className={s.link} to={ROUTES.REGISTRATION}>Sign up</NavLink>\n            </div>\n\n            {isLoading && <Preloader/>}\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/unknown.897e230f.png\";","import React, {useState} from \"react\";\nimport s from './Profile.module.scss'\nimport unknown from '../../common/assets/images/unknown.png'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../bll/store\";\nimport {Redirect} from \"react-router-dom\";\nimport {ROUTES} from \"../../app/routes/Routes\";\nimport {Button} from \"../../common/components/button/Button\";\nimport {logoutTC, updateMe} from \"../../bll/reducers/profileReducer\";\nimport {Preloader} from \"../../common/components/preloader/Preloader\";\nimport {EditableSpan} from \"../../common/components/editableSpan/EditableSpan\";\n\nexport const Profile: React.FC = () => {\n    const nameFromProp = useSelector((state: AppStateType) => state.profile.name)\n    const email = useSelector((state: AppStateType) => state.profile.email)\n    const avatar = useSelector((state: AppStateType) => state.profile.avatar)\n\n    const isLoggedIn = useSelector((state: AppStateType) => state.login.isLoggedIn)\n    const isLoading = useSelector((state: AppStateType) => state.login.isLoading)\n    const error = useSelector((state: AppStateType) => state.profile.error)\n\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState<string>(nameFromProp)\n\n    if (!isLoggedIn) {\n        return <Redirect to={ROUTES.LOGIN}/>\n    }\n\n    const changeAvatar = () => {\n        const newAvatar = prompt('Enter here link to new avatar:')\n        dispatch(updateMe(name, (newAvatar || '')))\n    }\n\n    return (<>\n            {!nameFromProp\n                ?\n                <Preloader/>\n                :\n                <div className={s.page}>\n                    <div className={s.pageTitle}>Profile</div>\n\n                    <div className={s.error}>{error}</div>\n\n                    <div className={s.logout}>\n                        {isLoggedIn &&\n                        <Button disabled={isLoading} red value={'logout'} onClick={() => dispatch(logoutTC())}/>}\n                    </div>\n                    <div className={s.profile}>\n                        <div className={s.imgBox}>\n                            <img className={s.img} src={avatar || unknown} alt=\"avatar\"/>\n                            <Button disabled={isLoading} className={s.changeBtn} value={'Change avatar'}\n                                    onClick={changeAvatar}/>\n                        </div>\n\n                        <div className={s.description}>\n                            <div><h3>Name: </h3>\n                                <EditableSpan\n                                    value={name}\n                                    onChangeText={setName}\n                                    onBlur={() => dispatch(updateMe(name, avatar))}\n                                    onEnter={() => dispatch(updateMe(name, avatar))}/>\n                            </div>\n                            <div><h3>Email: </h3><p>{email}</p></div>\n                        </div>\n                    </div>\n\n                    {isLoading && <Preloader/>}\n                </div>\n            }\n        </>\n    )\n}\n","import React, {ChangeEvent, useState} from \"react\";\nimport s from './PasswordRecovery.module.scss'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {createPasswordTC} from \"../../bll/reducers/setPasswordReducer\";\nimport {AppStateType} from \"../../bll/store\";\nimport {Button} from \"../../common/components/button/Button\";\nimport {InputText} from \"../../common/components/inputText/InputText\";\nimport {Preloader} from \"../../common/components/preloader/Preloader\";\n\nexport const PasswordRecovery: React.FC = () => {\n    const dispatch = useDispatch();\n    const [password, setPassword] = useState<string>(\"\");\n\n    const errorPasswordState = useSelector<AppStateType, string>(state => state.setPassword.errorPassword);\n    const loadingState = useSelector<AppStateType, boolean>(state => state.setPassword.loading);\n\n\n    const passwordHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setPassword(e.currentTarget.value);\n    }\n    const {token} = useParams<{ token: string }>();\n    console.log(token)\n\n    const sendInstruction = () => {\n        dispatch(createPasswordTC(password, token));\n    }\n    const status = useSelector<AppStateType, number>(state => state.setPassword.status)\n    if (status === 200) {\n        debugger\n        return (<Redirect to={\"/login\"}/>)\n    }\n    return (\n        <div className={s.page}>\n            <div className={s.pageTitle}>Create new password</div>\n            <div className={s.mainBlock}>\n                <div className={s.input}>\n                    <InputText\n                        label={\"New password\"}\n                        value={password}\n                        onChange={passwordHandler}\n                        type={\"password\"}\n                        name={\"password\"}/>\n                </div>\n                <p style={{height: '1em', color: '#de2e2e'}}>{errorPasswordState}</p>\n\n                <div>\n                    <Button disabled={loadingState} value={\"Confirm new password\"} onClick={sendInstruction}/>\n                </div>\n\n                {loadingState && <Preloader/>}\n\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport s from './Home.module.scss'\nimport {Button} from \"../../common/components/button/Button\";\nimport {NavLink} from \"react-router-dom\";\nimport {ROUTES} from \"../../app/routes/Routes\";\n\nexport const Home: React.FC = () => {\n    return (\n        <div className={s.page}>\n            <div className={s.pageTitle}>All pages</div>\n\n            <NavLink to={ROUTES.LOGIN}><Button value={'login'} className={s.btn}/></NavLink>\n            <NavLink to={ROUTES.PROFILE}><Button value={'profile'} className={s.btn}/></NavLink>\n            <NavLink to={ROUTES.REGISTRATION}><Button value={'registration'} className={s.btn}/></NavLink>\n            <NavLink to={ROUTES.PASSWORD_RECOVERY}><Button value={'password-recovery'} className={s.btn}/></NavLink>\n            <NavLink to={ROUTES.SET_PASSWORD}><Button value={'set-password'} className={s.btn}/></NavLink>\n            <NavLink to={ROUTES.ERROR_PAGE}><Button value={'404'} className={s.btn}/></NavLink>\n        </div>\n    )\n}\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {Button} from \"../../common/components/button/Button\";\nimport { ROUTES } from '../routes/Routes';\nimport s from './Header.module.scss'\nimport {useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../bll/store\";\n\nexport const Header = () => {\n    const isLoggedIn = useSelector((state: AppStateType) => state.login.isLoggedIn)\n\n    return (\n        <div className={s.header}>\n            <div>\n                <NavLink to={ROUTES.TEST}><Button value={'test-components'} className={s.btn}/></NavLink>\n                <NavLink to={ROUTES.HOME}><Button value={'all-pages'} className={s.btn}/></NavLink>\n            </div>\n            <div>\n                <NavLink to={ROUTES.PROFILE}><Button value={'Profile'} className={s.btn}/></NavLink>\n            </div>\n            <div>\n                <NavLink style={{opacity: isLoggedIn ? '0' : '1'}} to={ROUTES.LOGIN}><Button value={'Log In'} className={s.btn}/></NavLink>\n                <NavLink style={{opacity: isLoggedIn ? '0' : '1'}} to={ROUTES.REGISTRATION}><Button value={'Sign Up'} className={s.btn}/></NavLink>\n            </div>\n        </div>\n    )\n}\n","import React, {useEffect} from 'react';\nimport {Routes} from \"./routes/Routes\";\nimport s from './App.module.scss'\nimport {Header} from \"./header/Header\";\nimport {authMe} from \"../bll/reducers/profileReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../bll/store\";\n\nexport const App = () => {\n    const isLoggedIn = useSelector<AppStateType>(state => state.login.isLoggedIn)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        !isLoggedIn && dispatch(authMe())\n    }, [])\n\n    return (\n        <div className={s.app}>\n            <Header/>\n            <Routes/>\n        </div>\n    );\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk, {ThunkAction} from \"redux-thunk\";\nimport profileReducer from \"./reducers/profileReducer\";\nimport loginReducer from \"./reducers/loginReducer\";\nimport registrationReducer from \"./reducers/registrationReducer\";\nimport {setPasswordReducer} from \"./reducers/setPasswordReducer\";\n\nconst reducers = combineReducers({\n    profile: profileReducer,\n    login: loginReducer,\n    registration: registrationReducer,\n    setPassword:setPasswordReducer,\n})\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport type AppStateType = ReturnType<typeof reducers>\nexport type AppActionsType = any\n\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, AppActionsType>\n\n// @ts-ignore\nwindow.store= store\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {App} from \"./app/App\";\nimport {Provider} from \"react-redux\";\nimport store from \"./bll/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <Provider store={store}>\n              <App/>\n          </Provider>\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}